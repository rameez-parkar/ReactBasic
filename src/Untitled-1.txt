  stage('Test') {
        	steps{
        		echo 'Testing project'
        		bat 'dotnet test %testFile%'
                echo 'Finished test'
        	}
        }
		stage('Code Analysis'){
			steps{
				echo 'Performing SonarQube Code Analysis'
				script{
					withSonarQubeEnv ('SonarQubeServer'){
						withCredentials([usernamePassword(credentialsId: '43ecc876-fb21-4289-aed9-e8ad51aae1e2', passwordVariable: 'password', usernameVariable: 'username')]){
							bat 'dotnet %SonarScanner% begin /key:%projectKey% /d:sonar.login=%username% /d:sonar.password=%password%'
							bat 'dotnet build'
							bat 'dotnet %SonarScanner% end /d:sonar.login=%username% /d:sonar.password=%password%'
						}
					}
				}
			}
		}


/////////////////////////////



        stage('Docker Login'){
			steps{
				withCredentials([usernamePassword(credentialsId: '433624c2-9a39-483d-aad6-48526cf306f0', passwordVariable: 'password', usernameVariable: 'username')]){
					echo 'Logging in to Docker Hub'
					bat 'docker login --username=%username% --password=%password%'
					echo 'Login Complete'
				}
			}
		}
		stage('Docker Push'){
			steps{
				echo 'Pushing image to Docker Hub'
				bat 'docker tag %imageName% %registryName%/%repositoryName%:%tag%'
				bat 'docker push %registryName%/%repositoryName%:%tag%'
				bat 'docker rmi %imageName%'
				echo 'Image pushed to Docker Hub'
			}
		}
		stage('Docker Pull'){
			steps{
				echo 'Pulling image from Docker Hub'
				bat 'docker pull %registryName%/%repositoryName%:%tag%'
				echo 'Image pulled from Docker Hub'
			}
		}